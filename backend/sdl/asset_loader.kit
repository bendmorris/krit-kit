import kit.sys.file;

abstract AssetLoader: Void {
    public static function loadImage(allocator: Box[Allocator], id: CString): Shared[ImageData]
    using implicit allocator {
        // shortcut for now: just load from file
        var surface = IMG_Load(id);
        var img: Shared[ImageData] = Shared.alloc(sizeof ImageData);
        img.width = surface.w;
        img.height = surface.h;
        var texture: Ptr[GLuint] = img.texture;
        glGenTextures(1, texture);
        glBindTexture(GL_TEXTURE_2D, texture);
        glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, surface.w, surface.h, 0, GL_RGBA, GL_UNSIGNED_BYTE, surface.pixels);
        GL.checkForErrors("asset load");
        SDL_FreeSurface(surface);
        return img;
    }

    public static function freeImage(allocator: Box[Allocator], img: Shared[ImageData]) {
        glDeleteTextures(1, img.texture);
    }

    public static function getFileSize(id: CString) {
        var f = File.read(id);
        var size = f.getSize();
        f.close();
        return size;
    }
}
