struct GraphicList {
    public var position: Point = struct Point;
    public var dimensions: Dimensions[Int] = struct Dimensions[Int];
    public var scale: ScaleFactor = struct ScaleFactor;
    public var color: Color = Color.White;
    public var alpha: Float = 1;
    public var active: Bool = true;
    public var visible: Bool = true;

    var graphics: Vector[Box[Graphic]];

    public static function new(allocator: Box[Allocator], source: ImageRegion) {
        return struct GraphicList {
            graphics: Vector.new(16),
        };
    }
}

implement Graphic for GraphicList {
    public function render(context: Ptr[RenderContext]): Void {
        for graphic in this.graphics {
            graphic.render(context);
        }
    }

    public function update(context: Ptr[UpdateContext]): Void {
        for graphic in this.graphics {
            graphic.update(context);
        }
    }
}
