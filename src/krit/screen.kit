struct Screen {
    public var position: Point = Point.new(0, 0);
    public var baseSize: Dimensions[Int] = Dimensions[Int].new(0, 0);
    public var virtualSize: Dimensions[Int] = Dimensions[Int].new(0, 0);

    var window: Ptr[Window];
    var scaleMode: Box[ScreenScaleMode];

    public static function new(window: Ptr[Window], width: Int, height: Int, scaleMode: Box[ScreenScaleMode]) {
        var s: Screen = struct Screen {window, scaleMode};
        s.baseSize.setTo(width, height);
        s.virtualSize.setTo(width, height);
        return s;
    }

    public function onResize(width: Int, height: Int) {
        this.scaleMode.onResize(this, width, height);
    }

    rules {
        ($this.scaleX) => $this.window.dimensions.width / $this.virtualSize.width;
        ($this.scaleY) => $this.window.dimensions.height / $this.virtualSize.height;
    }
}

trait ScreenScaleMode {
    function onResize(screen: Ptr[Screen], width: Int, height: Int);
}
